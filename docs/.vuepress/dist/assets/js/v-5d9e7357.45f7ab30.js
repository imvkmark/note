"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4965],{8381:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-5d9e7357",path:"/mysql/7_export.html",title:"数据导入导出",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"10.1 使用 Load Data 和 mysqlimport 导入数据",slug:"_10-1-使用-load-data-和-mysqlimport-导入数据",children:[]},{level:3,title:"10.2 导入时候对数据进行预处理",slug:"_10-2-导入时候对数据进行预处理",children:[]},{level:3,title:"10.3 mysql 导出",slug:"_10-3-mysql-导出",children:[]},{level:3,title:"10.4 SQLMode",slug:"_10-4-sqlmode",children:[]},{level:3,title:"11.1 生成和使用序列",slug:"_11-1-生成和使用序列",children:[]},{level:3,title:"12.1 在表中找到与另一个表中的行相匹配的行",slug:"_12-1-在表中找到与另一个表中的行相匹配的行",children:[]}],filePathRelative:"mysql/7_export.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},7570:(n,e,a)=>{a.r(e),a.d(e,{default:()=>l});const s=(0,a(6252).uE)('<h1 id="数据导入导出" tabindex="-1"><a class="header-anchor" href="#数据导入导出" aria-hidden="true">#</a> 数据导入导出</h1><h3 id="_10-1-使用-load-data-和-mysqlimport-导入数据" tabindex="-1"><a class="header-anchor" href="#_10-1-使用-load-data-和-mysqlimport-导入数据" aria-hidden="true">#</a> 10.1 使用 Load Data 和 mysqlimport 导入数据</h3><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>Load Data Local InFile &#39;file.txt&#39; Into Table tbl_name\n    Fields Terminated By &#39;:&#39;\n        Enclosed By &#39;&quot;&#39;   # 指定引用\n        Escaped By &#39;&#39;     # 指定转义\n    Lines Terminated By &#39;\\r&#39;\n    Ignore 1 Lines;       # 指定忽略\n# 默认使用制表符 \\t\n# 换行代表一行数据\n# 需要 File 权限\n# 文件位于服务器机器上\n# 相对路径的文件位于 数据库存储 位置\n# 没有 Local 读取服务器文件\n# 存在 Local 读取本地文件\n# Replace Into 是对数据进行替代操作, 存在则不进行处理\n# 使用 Show Warnings 来显示相关的警告信息\n# 表格后可以指定列 tbl_name(col1, col2, col3), 默认全部\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ mysqlimport --local tbl_name file.txt\n    --fields-terminated-by=&#39;:&#39;\n    --fields-enclosed-by=&#39;:&#39;\n    --fields-escaped-by=&#39;:&#39;\n    --lines-terminated-by=&#39;\\r&#39;\n    --columns=a,b,c\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_10-2-导入时候对数据进行预处理" tabindex="-1"><a class="header-anchor" href="#_10-2-导入时候对数据进行预处理" aria-hidden="true">#</a> 10.2 导入时候对数据进行预处理</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Load Data Local InFile &#39;file.txt&#39; Into Table tbl_name\n    (@cola, @colb, @colc)\n    Set\n        dt = concat(@cola, &#39; &#39;, $colc),\n        df = substring_index(@colb, &#39; &#39;, 1)\n        ...;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_10-3-mysql-导出" tabindex="-1"><a class="header-anchor" href="#_10-3-mysql-导出" aria-hidden="true">#</a> 10.3 mysql 导出</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ mysql -e &quot;select ....&quot; --skip-column-names tbl_name\n    &gt;&gt; data.txt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_10-4-sqlmode" tabindex="-1"><a class="header-anchor" href="#_10-4-sqlmode" aria-hidden="true">#</a> 10.4 SQLMode</h3><p>通过设置 sql_mode 变量来开启输入数据接收限制.</p><h3 id="_11-1-生成和使用序列" tabindex="-1"><a class="header-anchor" href="#_11-1-生成和使用序列" aria-hidden="true">#</a> 11.1 生成和使用序列</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Auto_Increment # 列\nid Int Unsigned Not Null Auto_Increment,\nPrimary Key(id)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_12-1-在表中找到与另一个表中的行相匹配的行" tabindex="-1"><a class="header-anchor" href="#_12-1-在表中找到与另一个表中的行相匹配的行" aria-hidden="true">#</a> 12.1 在表中找到与另一个表中的行相匹配的行</h3><p>使用 join</p><p>一个完全的连接将产生所有可能的行联合, 即笛卡尔积.正因为如此同时也很少使用两个以上表的联合, 连接通常会包含 On 或 Using 子句以指定如何在表间进行连接</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Select * From artist, painting\n    where artist.a_id = painting.a_id\n\nSelect * From artist Inner Join painting\n    on artist.a_id = painting.a_id\n\nSelect * From artist Inner Join painting\n    on using(a_id)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Inner Join 所编写的连接为内部连接, 这意味着它们只为某个表中与其他表的值相匹配的值产生结果.</p><p>外部连接(Left Join/Right Join)同样可以产生这些匹配, 此外还可以为你显示某个表中的哪些值于另外一个表中的值是不相符的.</p><p><code>Left Join</code> 的意思是左侧为基准, 右侧数据可以为空, <code>Right Join</code> 则相反.</p>',19),l={render:function(n,e){return s}}}}]);