"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[680],{1559:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-37059644",path:"/mysql/2_query.html",title:"2. 从表中查询数据",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"3.1 列查询",slug:"_3-1-列查询",children:[]},{level:3,title:"3.2 指定行查询(条件筛选)",slug:"_3-2-指定行查询-条件筛选",children:[]},{level:3,title:"3.3 格式化显示查询结果",slug:"_3-3-格式化显示查询结果",children:[]},{level:3,title:"3.4 调试比较表达式",slug:"_3-4-调试比较表达式",children:[]},{level:3,title:"3.5 null 值的比较",slug:"_3-5-null-值的比较",children:[]},{level:3,title:"3.6 排序/视图/多表查询",slug:"_3-6-排序-视图-多表查询",children:[]},{level:3,title:"7.1 使用 Order By",slug:"_7-1-使用-order-by",children:[]},{level:3,title:"7.2 查询条件",slug:"_7-2-查询条件",children:[]},{level:3,title:"7.3 按照用户自定义排序",slug:"_7-3-按照用户自定义排序",children:[]},{level:3,title:"7.4 Enum 排序",slug:"_7-4-enum-排序",children:[]}],filePathRelative:"mysql/2_query.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},1553:(e,n,a)=>{a.r(n),a.d(n,{default:()=>l});const s=(0,a(6252).uE)('<h1 id="_2-从表中查询数据" tabindex="-1"><a class="header-anchor" href="#_2-从表中查询数据" aria-hidden="true">#</a> 2. 从表中查询数据</h1><h3 id="_3-1-列查询" tabindex="-1"><a class="header-anchor" href="#_3-1-列查询" aria-hidden="true">#</a> 3.1 列查询</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql &gt; select * from mail;\nmysql &gt; select mail, name from mail;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-2-指定行查询-条件筛选" tabindex="-1"><a class="header-anchor" href="#_3-2-指定行查询-条件筛选" aria-hidden="true">#</a> 3.2 指定行查询(条件筛选)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql &gt; select mail, name from mail where name=&#39;zhao&#39;;\nmysql &gt; select mail, name from mail where name like &#39;zh%&#39;;\n\nmysql &gt; select mail, name from mail where name=&#39;zhao&#39; and area =&#39;beijing&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-3-格式化显示查询结果" tabindex="-1"><a class="header-anchor" href="#_3-3-格式化显示查询结果" aria-hidden="true">#</a> 3.3 格式化显示查询结果</h3><blockquote><p>这里利用各种的函数来格式化相应的位置</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>CONCAT()     : 链接字符串\nMONTHNAME()  : 月份名称\nDayOfMonth() : 天\nYear()      : 年份\nDateFormat   : 日期格式化\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>使用 <code>as</code> 对列使用别名 列别名在 <code>where</code> 中不可用 使用 <code>distinct</code> 进行唯一性处理</p></blockquote><h3 id="_3-4-调试比较表达式" tabindex="-1"><a class="header-anchor" href="#_3-4-调试比较表达式" aria-hidden="true">#</a> 3.4 调试比较表达式</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 这里的 name=&#39;good&#39; 便是表达式\nmysql &gt; select mail, name = &#39;good&#39; from name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-5-null-值的比较" tabindex="-1"><a class="header-anchor" href="#_3-5-null-值的比较" aria-hidden="true">#</a> 3.5 null 值的比较</h3><p>对于 null 值使用 null 的比较操作符</p><p><code>is null</code>, <code>is not null</code>, <code>&lt;=&gt;</code></p><p>这里有两个函数需要注意</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>If(expr1 is not null, expr1, expr2);\nIfNull(expr1, expr2)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这两个函数等价.</p><h3 id="_3-6-排序-视图-多表查询" tabindex="-1"><a class="header-anchor" href="#_3-6-排序-视图-多表查询" aria-hidden="true">#</a> 3.6 排序/视图/多表查询</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... order by a;\n... order by a, b;\n... order by a asc, b;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>多表查询</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... from profile \n    inner join\n        profile_contact\n    on \n        profile.id = profile_contact.profile_id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>子查询</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... from profile_contact \n    where\n        profile_id in (select id from profile where area=&#39;beijing&#39;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>查询头尾取出数据</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... Limit 1\n... Limit 2, 1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>结果集再次排序</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>select * from \n   (select name from profile order by birth desc limit 4) as t\n   order by birth asc;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_7-1-使用-order-by" tabindex="-1"><a class="header-anchor" href="#_7-1-使用-order-by" aria-hidden="true">#</a> 7.1 使用 <code>Order By</code></h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 标准\n... Order By name [Desc][, title [Asc]];\n\n# 表达式排序\n... Order By Floor((size + 1023) / 1024)\n\n# 时间排序\n... Order By date;\n\n# 可以根据字串的某部分进行排序\n... Order By SubString_Index(bsn, &#39;-&#39;, -3)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_7-2-查询条件" tabindex="-1"><a class="header-anchor" href="#_7-2-查询条件" aria-hidden="true">#</a> 7.2 查询条件</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># If\n... Order By If(a=b, 0, 1);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-3-按照用户自定义排序" tabindex="-1"><a class="header-anchor" href="#_7-3-按照用户自定义排序" aria-hidden="true">#</a> 7.3 按照用户自定义排序</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Field\n... Order By Field(name, &#39;Zhang&#39;, &#39;Li&#39;, &#39;Wang&#39;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-4-enum-排序" tabindex="-1"><a class="header-anchor" href="#_7-4-enum-排序" aria-hidden="true">#</a> 7.4 Enum 排序</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 使用 Cast 进行转换为字串\n# 默认 Enum 存储的是数值\n... Order By Cast(day as Char);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',35),l={render:function(e,n){return s}}}}]);