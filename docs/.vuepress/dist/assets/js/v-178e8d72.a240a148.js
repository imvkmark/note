"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4578],{4037:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-178e8d72",path:"/os/linux/logrotate.html",title:"[转+] 运维中的日志切割(logrotate)操作梳理",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"Logrotate 介绍",slug:"logrotate-介绍",children:[]},{level:3,title:"配置文件介绍",slug:"配置文件介绍",children:[]},{level:3,title:"切割介绍",slug:"切割介绍",children:[]},{level:3,title:"其他重要参数说明",slug:"其他重要参数说明",children:[]},{level:3,title:"参考文章",slug:"参考文章",children:[]}],filePathRelative:"os/linux/logrotate.md",git:{updatedTime:1629648513e3,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},2593:(e,n,s)=>{s.r(n),s.d(n,{default:()=>g});var a=s(6252);const r=(0,a._)("h1",{id:"转-运维中的日志切割-logrotate-操作梳理",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#转-运维中的日志切割-logrotate-操作梳理","aria-hidden":"true"},"#"),(0,a.Uk)(" [转+] 运维中的日志切割(logrotate)操作梳理")],-1),l=(0,a.Uk)("原文地址 : "),t={href:"https://www.cnblogs.com/kevingrace/p/6307298.html",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("运维中的日志切割操作梳理"),p=(0,a.uE)('<p>对于Linux系统安全来说，日志文件是极其重要的工具。不知为何，我发现很多运维同学的服务器上都运行着一些诸如每天切分Nginx日志之类的CRON脚本，大家似乎遗忘了Logrotate，争相发明自己的轮子，这真是让人沮丧啊！就好比明明身边躺着现成的性感美女，大家却忙着自娱自乐，罪过！</p><p>logrotate程序是一个日志文件管理工具。用于分割日志文件，删除旧的日志文件，并创建新的日志文件，起到“转储”作用。可以节省磁盘空间。下面就对logrotate日志轮转操作做一梳理记录：</p><h3 id="logrotate-介绍" tabindex="-1"><a class="header-anchor" href="#logrotate-介绍" aria-hidden="true">#</a> Logrotate 介绍</h3><p>显而易见，Logrotate是基于CRON来运行的，其脚本是<code>/etc/cron.daily/logrotate</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>#!/bin/sh\n\n/usr/sbin/logrotate /etc/logrotate.conf\nEXITVALUE=$?\nif [ $EXITVALUE != 0 ]; then\n    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;\nfi\nexit 0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>实际运行时，Logrotate会调用配置文件「/etc/logrotate.conf」：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># see &quot;man logrotate&quot; for details\n# rotate log files weekly\nweekly\n\n# keep 4 weeks worth of backlogs\nrotate 4\n\n# create new (empty) log files after rotating old ones\ncreate\n\n# uncomment this if you want your log files compressed\n#compress\n\n# RPM packages drop log rotation information into this directory\ninclude /etc/logrotate.d\n\n# no packages own wtmp -- we&#39;ll rotate them here\n/var/log/wtmp {\n    monthly\n    minsize 1M\n    create 0664 root utmp\n    rotate 1\n}\n\n# system-specific logs may be also be configured here.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>这里的设置可以理解为Logrotate的缺省值，当然了，可以我们在「/etc/logrotate.d」目录里放置自己的配置文件，用来覆盖Logrotate的缺省值。</p><h3 id="配置文件介绍" tabindex="-1"><a class="header-anchor" href="#配置文件介绍" aria-hidden="true">#</a> 配置文件介绍</h3><p>Linux系统默认安装logrotate工具，它默认的配置文件在：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/etc/logrotate.conf\n/etc/logrotate.d/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>logrotate.conf 才主要的配置文件，logrotate.d 是一个目录，该目录里的所有文件都会被主动的读入/etc/logrotate.conf中执行。 另外，如果 /etc/logrotate.d/ 里面的文件中没有设定一些细节，则会以/etc/logrotate.conf这个文件的设定来作为默认值。</p><p>如果等不及cron自动执行日志轮转，想手动强制切割日志，需要加-f参数；不过正式执行前最好通过Debug选项来验证一下（-d参数），这对调试也很重要</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># /usr/sbin/logrotate -f /etc/logrotate.d/nginx\n# /usr/sbin/logrotate -d -f /etc/logrotate.d/nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>logrotate命令格式： logrotate [OPTION...] <code>-d</code>, <code>--debug</code> ：debug模式，测试配置文件是否有错误。 <code>-f</code>, <code>--force</code> ：强制转储文件。 <code>-m</code>, <code>--mail=command</code> ：压缩日志后，发送日志到指定邮箱。 <code>-s</code>, <code>--state=statefile</code> ：使用指定的状态文件。 <code>-v</code>, <code>--verbose</code> ：显示转储过程。</p><p>根据日志切割设置进行操作，并显示详细信息</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ /usr/sbin/logrotate -v /etc/logrotate.conf \n$ /usr/sbin/logrotate -v /etc/logrotate.d/php\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>根据日志切割设置进行执行，并显示详细信息,但是不进行具体操作，debug模式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ /usr/sbin/logrotate -d /etc/logrotate.conf \n$ /usr/sbin/logrotate -d /etc/logrotate.d/nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>查看各log文件的具体执行情况</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ cat /var/lib/logrotate.status\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="切割介绍" tabindex="-1"><a class="header-anchor" href="#切割介绍" aria-hidden="true">#</a> 切割介绍</h3><p>比如以系统日志/var/log/message做切割来简单说明下： 第一次执行完rotate(轮转)之后，原本的messages会变成messages.1，而且会制造一个空的messages给系统来储存日志； 第二次执行之后，messages.1会变成messages.2，而messages会变成messages.1，又造成一个空的messages来储存日志！ 如果仅设定保留三个日志（即轮转3次）的话，那么执行第三次时，则 messages.3这个档案就会被删除，并由后面的较新的保存日志所取代！也就是会保存最新的几个日志。 日志究竟轮换几次，这个是根据配置文件中的dateext 参数来判定的。</p><p>看下logrotate.conf配置：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ cat /etc/logrotate.conf\n\n# 底下的设定是 &quot;logrotate 的默认值&quot; ，如果別的文件设定了其他的值，\n# 就会以其它文件的设定为主\nweekly          //默认每一周执行一次rotate轮转工作\nrotate 4        //保留多少个日志文件(轮转几次).默认保留四个.就是指定日志文件删除之前轮转的次数，0 指没有备份\ncreate          //自动创建新的日志文件，新的日志文件具有和原来的文件相同的权限；因为日志被改名,因此要创建一个新的来继续存储之前的日志\ndateext         //这个参数很重要！就是切割后的日志文件以当前日期为格式结尾，如xxx.log-20131216这样,如果注释掉,切割出来是按数字递增,即前面说的 xxx.log-1这种格式\ncompress        //是否通过gzip压缩转储以后的日志文件，如xxx.log-20131216.gz ；如果不需要压缩，注释掉就行\n\ninclude /etc/logrotate.d\n# 将 /etc/logrotate.d/ 目录中的所有文件都加载进来\n\n/var/log/wtmp {         //仅针对 /var/log/wtmp 所设定的参数\n    monthly                 //每月一次切割,取代默认的一周\n    minsize 1M              //文件大小超过 1M 后才会切割\n    create 0664 root utmp   //指定新建的日志文件权限以及所属用户和组\n    rotate 1                //只保留一个日志.\n}\n# 这个 wtmp 可记录用户登录系统及系统重启的时间\n# 因为有 minsize 的参数，因此不见得每个月一定会执行一次喔.要看文件大小。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>由这个文件的设定可以知道/etc/logrotate.d其实就是由/etc/logrotate.conf 所规划出来的目录，虽然可以将所有的配置都写入/etc/logrotate.conf ，但是这样一来这个文件就实在是太复杂了，尤其是当使用很多的服务在系统上面时， 每个服务都要去修改/etc/logrotate.conf的设定也似乎不太合理了。  所以，如果独立出来一个目录，那么每个要切割日志的服务， 就可以独自成为一个文件，并且放置到 /etc/logrotate.d/ 当中</p><h3 id="其他重要参数说明" tabindex="-1"><a class="header-anchor" href="#其他重要参数说明" aria-hidden="true">#</a> 其他重要参数说明</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>compress                           // 通过gzip 压缩转储以后的日志\nnocompress                         // 不做gzip压缩处理\ncopytruncate                       // 用于还在打开中的日志文件，把当前日志备份并截断；是先拷贝再清空的方式，拷贝和清空之间有一个时间差，可能会丢失部分日志数据。\nnocopytruncate                     // 备份日志文件不过不截断\ncreate mode owner group            // 轮转时指定创建新文件的属性，如create 0777 nobody nobody\nnocreate                           // 不建立新的日志文件\ndelaycompress                      // 和compress 一起使用时，转储的日志文件到下一次转储时才压缩\nnodelaycompress                    // 覆盖 delaycompress 选项，转储同时压缩。\nmissingok                          // 如果日志丢失，不报错继续滚动下一个日志\nerrors address                     // 专储时的错误信息发送到指定的Email 地址\nifempty                            // 即使日志文件为空文件也做轮转，这个是logrotate的缺省选项。\nnotifempty                         // 当日志文件为空时，不进行轮转\nmail address                       // 把转储的日志文件发送到指定的E-mail 地址\nnomail                             // 转储时不发送日志文件\nolddir directory                   // 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统\nnoolddir                           // 转储后的日志文件和当前日志文件放在同一个目录下\nsharedscripts                      // 运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本\nprerotate                          // 在logrotate转储之前需要执行的指令，例如修改文件的属性等动作；必须独立成行\npostrotate                         // 在logrotate转储之后需要执行的指令，例如重新启动 (kill -HUP) 某个服务！必须独立成行\ndaily                              // 指定转储周期为每天\nweekly                             // 指定转储周期为每周\nmonthly                            // 指定转储周期为每月\nrotate count                       // 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份\ndateext                            // 使用当期日期作为命名格式\ndateformat .%s                     // 配合dateext使用，紧跟在下一行出现，定义文件切割后的文件名，必须配合dateext使用，只支持 %Y %m %d %s 这四个参数\nsize(或minsize) log-size           // 当日志文件到达指定的大小时才转储，log-size能指定bytes(缺省)及KB (sizek)或MB(sizem).\n当日志文件 &gt;= log-size 的时候就转储。 以下为合法格式：（其他格式的单位大小写没有试过）\nsize = 5 或 size 5 （&gt;= 5 个字节就转储）\nsize = 100k 或 size 100k\nsize = 100M 或 size 100M\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>小示例：下面一个切割nginx日志的配置</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ vim /etc/logrotate.d/nginx\n\n/usr/local/nginx/logs/*.log {\n    daily\n    rotate 7\n    missingok\n    notifempty\n    dateext\n    sharedscripts\n    postrotate\n        if [ -f /usr/local/nginx/logs/nginx.pid ]; then\n            kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`\n        fi\n    endscript\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h3>',31),i={href:"https://linux.cn/article-8227-1.html",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("配置 logrotate 的终极指导"),b={href:"https://linux.cn/article-4126-1.html",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("Linux日志文件总管——logrotate"),m={href:"https://www.centos.bz/2017/09/logrotate-log-cut/",target:"_blank",rel:"noopener noreferrer"},d=(0,a.Uk)("logrotate日志分割工具使用介绍"),g={render:function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,(0,a._)("p",null,[l,(0,a._)("a",t,[o,(0,a.Wm)(s)])]),p,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",i,[c,(0,a.Wm)(s)])]),(0,a._)("li",null,[(0,a._)("a",b,[u,(0,a.Wm)(s)])]),(0,a._)("li",null,[(0,a._)("a",m,[d,(0,a.Wm)(s)])])])],64)}}}}]);