"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3684],{7275:(t,d,e)=>{e.r(d),e.d(d,{data:()=>o});const o={key:"v-2d92fcaf",path:"/nginx/variable/url.html",title:"链接相关",lang:"zh-CN",frontmatter:{pageClass:"page-main-max"},excerpt:"",headers:[],filePathRelative:"nginx/variable/url.md",git:{updatedTime:1629648513e3,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},3806:(t,d,e)=>{e.r(d),e.d(d,{default:()=>c});const o=(0,e(6252).uE)('<h1 id="链接相关" tabindex="-1"><a class="header-anchor" href="#链接相关" aria-hidden="true">#</a> 链接相关</h1><table><thead><tr><th>变量名</th><th>备注</th><th>示例</th></tr></thead><tbody><tr><td><code>scheme</code></td><td>请求使用的 WEB 协议</td><td>http</td></tr><tr><td><code>uri</code></td><td>请求中的当前 URI(不带请求参数)，可以不同于浏览器传递的 <code>$request_uri</code> 的值，它可以通过内部重定向，或者使用 <code>index</code> 指令进行修改</td><td><code>/api/dump/path</code></td></tr><tr><td><code>document_uri</code></td><td>同 <code>$uri</code></td><td><code>/api/dump/path</code></td></tr><tr><td><code>request_uri</code></td><td>这个变量等于包含一些客户端请求参数的原始 URI ，它无法修改</td><td><code>/api/dump/path?a=1&amp;%E4%B8%AD%E6%96%87=%E5%A5%BD%E7%9A%84</code></td></tr><tr><td><code>request_method</code></td><td>HTTP 请求方法</td><td>GET</td></tr><tr><td><code>request_time</code></td><td>处理客户端请求使用的时间，从读取客户端的第一个字节开始计时</td><td>0.000</td></tr><tr><td><code>request_length</code></td><td>请求的长度（包括请求地址、请求头和请求主体）</td><td>678</td></tr><tr><td><code>args</code></td><td>请求参数</td><td><code>a=1&amp;%E4%B8%AD%E6%96%87=%E5%A5%BD%E7%9A%84</code></td></tr><tr><td><code>query_string</code></td><td>同 <code>$args</code></td><td></td></tr><tr><td><code>is_args</code></td><td>请求中是否有参数，有则为 <code>?</code> 否则为空</td><td><code>?</code></td></tr><tr><td><code>arg_参数名</code></td><td>请求中具体的参数</td><td><code>$arg_a</code> =&gt; <code>1</code></td></tr><tr><td><code>https</code></td><td>如果开启了 SSL 安全模式，则为 <code>on</code> 否则为空</td><td><code>on</code></td></tr></tbody></table>',2),c={render:function(t,d){return o}}}}]);