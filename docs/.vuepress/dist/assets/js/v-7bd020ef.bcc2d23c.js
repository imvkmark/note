"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3450],{751:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-7bd020ef",path:"/mysql/1_mysql-client.html",title:"1. 使用 Mysql 客户端",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"1.1 建立mysql 用户账号",slug:"_1-1-建立mysql-用户账号",children:[]},{level:3,title:"1.2 创建数据库和样表",slug:"_1-2-创建数据库和样表",children:[]},{level:3,title:"1.3 启动和停止 MySQL",slug:"_1-3-启动和停止-mysql",children:[]},{level:3,title:"1.4 使用可选项文件来指定链接",slug:"_1-4-使用可选项文件来指定链接",children:[]},{level:3,title:"1.5 保护选项文件不被其他用户读取",slug:"_1-5-保护选项文件不被其他用户读取",children:[]},{level:3,title:"1.6 混合使用命令行参数和选项文件参数",slug:"_1-6-混合使用命令行参数和选项文件参数",children:[]},{level:3,title:"1.7 找不到 mysql 应该怎么做",slug:"_1-7-找不到-mysql-应该怎么做",children:[]},{level:3,title:"1.8 发起 sql 语句",slug:"_1-8-发起-sql-语句",children:[]},{level:3,title:"1.9 从文件中读取语句",slug:"_1-9-从文件中读取语句",children:[]},{level:3,title:"1.10 打印错误",slug:"_1-10-打印错误",children:[]},{level:3,title:"1.11 让mysql 读取其他程序的 数据",slug:"_1-11-让mysql-读取其他程序的-数据",children:[]},{level:3,title:"1.12 一行输入所有 sql",slug:"_1-12-一行输入所有-sql",children:[]},{level:3,title:"1.13 预防查询输出超出屏幕范围",slug:"_1-13-预防查询输出超出屏幕范围",children:[]},{level:3,title:"1.14 查询结果输出",slug:"_1-14-查询结果输出",children:[]},{level:3,title:"1.15 查询结果二次转换",slug:"_1-15-查询结果二次转换",children:[]},{level:3,title:"1.16 使长输出行更具可读性",slug:"_1-16-使长输出行更具可读性",children:[]},{level:3,title:"1.17 冗长输出和简介输出",slug:"_1-17-冗长输出和简介输出",children:[]},{level:3,title:"1.18 记录操作步骤",slug:"_1-18-记录操作步骤",children:[]},{level:3,title:"1.19 用户自定义变量",slug:"_1-19-用户自定义变量",children:[]},{level:3,title:"1.20 mysql 数学函数",slug:"_1-20-mysql-数学函数",children:[]},{level:3,title:"1.21 shell 脚本中使用 mysql",slug:"_1-21-shell-脚本中使用-mysql",children:[]}],filePathRelative:"mysql/1_mysql-client.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:2}]}}},8388:(s,n,a)=>{a.r(n),a.d(n,{default:()=>l});const e=(0,a(6252).uE)('<h1 id="_1-使用-mysql-客户端" tabindex="-1"><a class="header-anchor" href="#_1-使用-mysql-客户端" aria-hidden="true">#</a> 1. 使用 Mysql 客户端</h1><h3 id="_1-1-建立mysql-用户账号" tabindex="-1"><a class="header-anchor" href="#_1-1-建立mysql-用户账号" aria-hidden="true">#</a> 1.1 建立mysql 用户账号</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 创建用户</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;cbuser&#39;</span><span class="token variable">@&#39;%&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">AS</span> <span class="token string">&#39;cbpass&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;remote&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">REQUIRE</span> NONE <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span> MAX_QUERIES_PER_HOUR <span class="token number">0</span> MAX_CONNECTIONS_PER_HOUR <span class="token number">0</span> MAX_UPDATES_PER_HOUR <span class="token number">0</span> MAX_USER_CONNECTIONS <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token punctuation">`</span><span class="token number">1</span>dailian\\_v2<span class="token punctuation">`</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;remote&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>\nFLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 创建用户并授权</span>\n<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">ON</span> daniu<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;cbuser&#39;</span> <span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;cbpass&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_1-2-创建数据库和样表" tabindex="-1"><a class="header-anchor" href="#_1-2-创建数据库和样表" aria-hidden="true">#</a> 1.2 创建数据库和样表</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> cookbook<span class="token punctuation">;</span>\n<span class="token keyword">USE</span> cookbook<span class="token punctuation">;</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> limbs <span class="token punctuation">(</span> thing <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">20</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> legs <span class="token keyword">INT</span><span class="token punctuation">,</span> arms <span class="token keyword">INT</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> limbs <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;human&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> limbs<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-3-启动和停止-mysql" tabindex="-1"><a class="header-anchor" href="#_1-3-启动和停止-mysql" aria-hidden="true">#</a> 1.3 启动和停止 MySQL</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 启动\n$ mysql -h host -p -u cbuser\n\n# 导出\n$ mysqldump -h localhost -p -u cbuser cookbook &gt; cookbook.sql\n\n# 服务器维护\n$ mysqladmin -p -uroot shutdown\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_1-4-使用可选项文件来指定链接" tabindex="-1"><a class="header-anchor" href="#_1-4-使用可选项文件来指定链接" aria-hidden="true">#</a> 1.4 使用可选项文件来指定链接</h3><p>my.ini / my.cnf 可以进行相应的配置</p><ul><li>使用组的方式来组织数据</li><li>只允许使用选项的长格式</li><li><code>=</code> 前后允许存在空格</li><li>选项没有值, 可以略去 =value 部分</li><li>如果选项值中包含空格以及其他特殊符号, 可以使用 引号(单引号/双引号) 将数值包裹起来</li><li>不需要某行则绿区即可</li><li>文件中可以定义多个组</li><li>多次出现, 最后出现的拥有最高优先级</li><li><code>#</code>, <code>;</code> 开头的数据会被忽略</li></ul><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">client</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">host</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span>\n<span class="token comment">;user=root</span>\n\n<span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">mysql</span><span class="token punctuation">]</span></span>\nskip-auto-rehash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_1-5-保护选项文件不被其他用户读取" tabindex="-1"><a class="header-anchor" href="#_1-5-保护选项文件不被其他用户读取" aria-hidden="true">#</a> 1.5 保护选项文件不被其他用户读取</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">chmod</span> <span class="token number">600</span> my.cnf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_1-6-混合使用命令行参数和选项文件参数" tabindex="-1"><a class="header-anchor" href="#_1-6-混合使用命令行参数和选项文件参数" aria-hidden="true">#</a> 1.6 混合使用命令行参数和选项文件参数</h3><p>命令行参数的优先级比选项文件中参数优先级高</p><h3 id="_1-7-找不到-mysql-应该怎么做" tabindex="-1"><a class="header-anchor" href="#_1-7-找不到-mysql-应该怎么做" aria-hidden="true">#</a> 1.7 找不到 mysql 应该怎么做</h3><p>将 mysql 安装目录放到环境变量中.</p><h3 id="_1-8-发起-sql-语句" tabindex="-1"><a class="header-anchor" href="#_1-8-发起-sql-语句" aria-hidden="true">#</a> 1.8 发起 sql 语句</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>;     # 作为末尾输入\n\\g    # 作为结束替代输入  &#39;\\go&#39;\n\\c    # 作为取消输入     &#39;\\cancel&#39;\n&quot;&gt;    # 需要输入 双引号 来结束\n&#39;&gt;    # 需要输入 单引号 来结束\n/*&gt;   # 需要输入 */ 来结束\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_1-9-从文件中读取语句" tabindex="-1"><a class="header-anchor" href="#_1-9-从文件中读取语句" aria-hidden="true">#</a> 1.9 从文件中读取语句</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ mysql cookbook &lt; filename.sql\n$ mysql -uroot -p\n$ use cookbook\n$ source filename.sql\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-10-打印错误" tabindex="-1"><a class="header-anchor" href="#_1-10-打印错误" aria-hidden="true">#</a> 1.10 打印错误</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ perror 24\nOS error code  24:  Too many open files\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-11-让mysql-读取其他程序的-数据" tabindex="-1"><a class="header-anchor" href="#_1-11-让mysql-读取其他程序的-数据" aria-hidden="true">#</a> 1.11 让mysql 读取其他程序的 数据</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 从文件读取sql\n$ mysql cookbook &lt; limbs.sql\n\n# 另外一种方法的文件读取\n$ cat limbs.sql | mysql cookbook\n\n# 跨境传输数据\n$ mysqldump cookbook | mysql -h other.host.com cookbook\n\n# 生成数据\n$ gen-test-data.sh | mysql cookbook\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_1-12-一行输入所有-sql" tabindex="-1"><a class="header-anchor" href="#_1-12-一行输入所有-sql" aria-hidden="true">#</a> 1.12 一行输入所有 sql</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ mysql -uroot -e &quot;select count(*) from mk_pam_account&quot; daniu\n\n# 多条数据\n$ mysql -uroot -e &quot;select count(*) from mk_pam_account;select now()&quot; daniu\n+----------+\n| count(*) |\n+----------+\n|     2342 |\n+----------+\n+---------------------+\n| now()               |\n+---------------------+\n| 2019-04-10 23:44:49 |\n+---------------------+\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_1-13-预防查询输出超出屏幕范围" tabindex="-1"><a class="header-anchor" href="#_1-13-预防查询输出超出屏幕范围" aria-hidden="true">#</a> 1.13 预防查询输出超出屏幕范围</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 指定 --pager 使其每次都显示一行输出\n$ mysql -uroot --pager=/usr/bin/less\n\n# 无参数代表使用系统默认分页\n$ mysql -uroot --pager\n\n# mysql 中使用分页\n# 设置默认分页\nmysql&gt; \\P \n\n# 设置指定分页\nmysql&gt; \\P /usr/bin/less\n\n# 恢复基本输出\nmysql&gt; \\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_1-14-查询结果输出" tabindex="-1"><a class="header-anchor" href="#_1-14-查询结果输出" aria-hidden="true">#</a> 1.14 查询结果输出</h3><p><strong>交互模式</strong> 交互模式下输出的是表格</p><p><strong>非交互模式</strong> 输出的是以制表符分隔的数据体</p><p><code>-t</code> or <code>--table</code> 如果输出格式强制使用 table 表格输出可以携带参数 <code>-B</code> or <code>--batch</code> 如果输出格式强制使用批量(定界符)输出, 可以使用 <code>-H</code> or <code>--html</code> 生成 html 格式 <code>-X</code> or <code>--xml</code> 使用 XML 格式输出 <code>-ss</code> or <code>--skip-column-names</code> 不在查询中输出包含列头部</p><h3 id="_1-15-查询结果二次转换" tabindex="-1"><a class="header-anchor" href="#_1-15-查询结果二次转换" aria-hidden="true">#</a> 1.15 查询结果二次转换</h3><p>如果查询结果并不能按照我们的期望输出, 可以使用 <code>sed</code>, <code>tr</code> 来进行二次转换</p><h3 id="_1-16-使长输出行更具可读性" tabindex="-1"><a class="header-anchor" href="#_1-16-使长输出行更具可读性" aria-hidden="true">#</a> 1.16 使长输出行更具可读性</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; show full columns from limbs\\G\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>-E</code> or <code>--vertical</code> 进行垂直输出</p><h3 id="_1-17-冗长输出和简介输出" tabindex="-1"><a class="header-anchor" href="#_1-17-冗长输出和简介输出" aria-hidden="true">#</a> 1.17 冗长输出和简介输出</h3><p><code>-v</code> or <code>-vv</code> or <code>-vvv</code> 冗长输出 <code>-s</code> or <code>-ss</code> or <code>-sss</code> 进行简洁输出</p><h3 id="_1-18-记录操作步骤" tabindex="-1"><a class="header-anchor" href="#_1-18-记录操作步骤" aria-hidden="true">#</a> 1.18 记录操作步骤</h3><p><code>-tee</code> or <code>\\T</code> or <code>\\t</code> 进行脚本记录的输出, 这些输出可供记录并且可以用作批处理文件</p><h3 id="_1-19-用户自定义变量" tabindex="-1"><a class="header-anchor" href="#_1-19-用户自定义变量" aria-hidden="true">#</a> 1.19 用户自定义变量</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 从执行过程中获取值\nmysql &gt; select @id:=id from libms;\nmysql &gt; select * from abcolumsn where id = @id;\n\n# 设置值使用 set\nmysql &gt; set @sum = 4+7;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_1-20-mysql-数学函数" tabindex="-1"><a class="header-anchor" href="#_1-20-mysql-数学函数" aria-hidden="true">#</a> 1.20 mysql 数学函数</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>select 20/sqrt(64);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_1-21-shell-脚本中使用-mysql" tabindex="-1"><a class="header-anchor" href="#_1-21-shell-脚本中使用-mysql" aria-hidden="true">#</a> 1.21 shell 脚本中使用 mysql</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 多行文本的输入并且支持变量\nmysql cookbook &lt;&lt;&lt; INPUT\n    select * from $1\nINPUT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',48),l={render:function(s,n){return e}}}}]);