"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[874],{6897:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-7000e23b",path:"/nginx/example/split-log.html",title:"日志切割 - Shell",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"nginx/example/split-log.md",git:{updatedTime:1629648513e3,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},684:(s,n,a)=>{a.r(n),a.d(n,{default:()=>l});const e=(0,a(6252).uE)('<h1 id="日志切割-shell" tabindex="-1"><a class="header-anchor" href="#日志切割-shell" aria-hidden="true">#</a> 日志切割 - Shell</h1><p>由于 Nginx 的日志（包括 access 和 error）默认都是存放在一个文件夹内，当时间长了，日志文件体积越来越大，不易管理，可以自己写个脚本来处理，其实就是定时定点去把日志移动下位置。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>\n\n<span class="token comment"># 日志源目录</span>\n<span class="token assign-left variable">sourceDir</span><span class="token operator">=</span><span class="token string">&#39;/var/log/nginx/xuexb.com/last&#39;</span>\n\n<span class="token comment"># 日志备份目录</span>\n<span class="token assign-left variable">backDir</span><span class="token operator">=</span><span class="token string">&#39;/var/log/nginx/xuexb.com/back&#39;</span>\n\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;split-logs start: <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y-%m-%d %H:%M:%S<span class="token variable">)</span></span>&quot;</span>\n\n<span class="token function">ls</span> <span class="token variable">$sourceDir</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> filename\n<span class="token keyword">do</span>\n    <span class="token function">mkdir</span> -p <span class="token string">&quot;<span class="token variable">$backDir</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>/&quot;</span>\n    <span class="token function">mv</span> <span class="token string">&quot;<span class="token variable">$sourceDir</span>/<span class="token variable">$filename</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$backDir</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>/&quot;</span>\n    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$sourceDir</span>/<span class="token variable">$filename</span> =&gt; <span class="token variable">$backDir</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>/<span class="token variable">$filename</span>&quot;</span>\n<span class="token keyword">done</span>\n\n<span class="token comment"># 刷新nginx</span>\n<span class="token function">kill</span> -USR1 <span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">`</span></span>\n\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;split-logs end: <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y-%m-%d %H:%M:%S<span class="token variable">)</span></span>&quot;</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>有几个注意的:</p><ol><li>日志源目录 - 该目录存放日志文件，如 access.log，error.log，当然如果你的站点比较多，可以用域名来命名，比如: xuexb.com.access.log，xuexb.com.error.log 。</li><li>日志备份目录 - 会以<code>Ymd</code>命名文件夹名存放在该目录。</li><li>刷新 Nginx - 由于是直接移动日志文件，移动后需要刷新下 Nginx 使其再生成日志文件，当然也可以 <code>nginx -s reload</code> ，但 <code>reload</code> 要比 <code>kill</code> 的慢，而 <code>kill -USR1</code> 是无损的。</li><li>定时任务 - 需要使用 <code>root</code> 帐户下使用 <code>crontab -e</code> 插入一条定时任务，定时 23:55 开始分割，后面是把错误和信息输出到指定文件，方便调试，如:</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>55 23 * * * sh /你的目录/split-log &gt;&gt; /var/log/nginx/crontab.log 2&gt;&amp;1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr><p>当然这只是日志切割的一种，还有很多种方法~</p>',8),l={render:function(s,n){return e}}}}]);