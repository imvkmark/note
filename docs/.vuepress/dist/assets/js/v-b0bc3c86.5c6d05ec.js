"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8837],{5853:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-b0bc3c86",path:"/javascript/x_vendor/axios-interceptors.html",title:"Axios",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"返回数据的错误处理",slug:"返回数据的错误处理",children:[]}],filePathRelative:"javascript/x_vendor/axios-interceptors.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},4019:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var p=a(6252);const t=(0,p._)("h1",{id:"axios",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#axios","aria-hidden":"true"},"#"),(0,p.Uk)(" Axios")],-1),e=(0,p._)("h2",{id:"返回数据的错误处理",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#返回数据的错误处理","aria-hidden":"true"},"#"),(0,p.Uk)(" 返回数据的错误处理")],-1),o=(0,p.Uk)("官方链接 : "),c={href:"https://axios-http.com/zh/docs/handling_errors",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("错误处理"),r=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/12345&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 请求成功发出且服务器也响应了状态码，但状态代码超出了 2xx 的范围</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>request<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 请求已经成功发起，但没有收到响应</span>\n      <span class="token comment">// `error.request` 在浏览器中是 XMLHttpRequest 的实例，</span>\n      <span class="token comment">// 而在node.js中是 http.ClientRequest 的实例</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 发送请求时出了点问题</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><strong>无网络</strong></p><blockquote><p>无 response 返回</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Network Error&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;stack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error: Network Error...&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>请求超时</strong></p><blockquote><p>无 response 返回</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;timeout of 2000ms exceeded&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;stack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error: timeout of 2000ms exceeded...&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ECONNABORTED&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>返回错误码</strong></p><blockquote><p>返回 response</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Request failed with status code 401&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;stack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Error: Request failed with status code 401...&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        ...\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>response 数据</p></blockquote><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Unauthorized Jwt.&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">401</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;statusText&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Unauthorized&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;cache-control&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no-cache, private&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/html; charset=UTF-8&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        ...\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        ...\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',12),l=(0,p.Uk)("对于 config 中的结构格式查看 "),i={href:"https://axios-http.com/zh/docs/req_config",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("请求配置"),b={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,(0,p._)("p",null,[o,(0,p._)("a",c,[u,(0,p.Wm)(a)])]),r,(0,p._)("p",null,[l,(0,p._)("a",i,[k,(0,p.Wm)(a)])])],64)}}}}]);