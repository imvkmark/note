"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8817],{790:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-f82368b6",path:"/os/mac/install-php-env.html",title:"[转+] Mac 使用 brew 安装 Nginx、MySQL、PHP-FPM 的 LNMP 开发环境",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"准备工作",slug:"准备工作",children:[]},{level:3,title:"nginx的安装与配置",slug:"nginx的安装与配置",children:[]},{level:3,title:"mysql的安装与配置",slug:"mysql的安装与配置",children:[]},{level:3,title:"php的安装与配置",slug:"php的安装与配置",children:[]},{level:3,title:"测试环境",slug:"测试环境",children:[]},{level:3,title:"结语",slug:"结语",children:[]}],filePathRelative:"os/mac/install-php-env.md",git:{updatedTime:1629648513e3,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},1202:(e,n,s)=>{s.r(n),s.d(n,{default:()=>c});var a=s(6252);const l=(0,a._)("h1",{id:"转-mac-使用-brew-安装-nginx、mysql、php-fpm-的-lnmp-开发环境",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#转-mac-使用-brew-安装-nginx、mysql、php-fpm-的-lnmp-开发环境","aria-hidden":"true"},"#"),(0,a.Uk)(" [转+] Mac 使用 brew 安装 Nginx、MySQL、PHP-FPM 的 LNMP 开发环境")],-1),r=(0,a.Uk)("原文地址： "),p={href:"http://tabalt.net/blog/install-nginx-mysql-php-fpm-by-brew-on-mac/",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("Mac OS使用brew安装Nginx、MySQL、PHP-FPM的LAMP开发环境"),t=(0,a.uE)('<h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作" aria-hidden="true">#</a> 准备工作</h3><p>新版的 Mac OS 内置了Apache 和 PHP，可以通过以下命令查看Apache和PHP的版本号：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ httpd -v\n\n  Server version: Apache/2.2.26 (Unix)\n  Server built:   Dec 10 2013 22:09:38\n\n$ php --version\n\n  PHP 5.4.24 (cli) (built: Jan 19 2014 21:32:15)\n  Copyright (c) 1997-2013 The PHP Group\n  Zend Engine v2.4.0, Copyright (c) 1998-2013 Zend Technologies\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>因为我们要自己动手来安装 Nginx，因此首先来关闭系统自带的apache：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo apachectl stop  #关闭apache，如果事先没开启过，可以忽略报错信息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果你的apache已经加入了launchctl，使用下面的命令来关闭：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>为什么选择关闭apache？因为mac os x系统自带的apache是没有优雅的remove/uninstall 的方式的… 对于“洁癖”比较严重的童鞋，可以选择直接删除相关的文件！（千万不要手抖删错目录…）</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo rm /usr/sbin/apachectl\n$ sudo rm /usr/sbin/httpd\n$ sudo rm -r /etc/apache2/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>删除自带的php</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo rm -r /usr/bin/php\n$ sudo rm -r /usr/bin/phpize\n$ sudo rm -r /usr/bin/php-config\n$ sudo rm -r /usr/sbin/php-fpm\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果没有安装brew，可以按照官网的步骤安装</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ http://brew.sh/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="nginx的安装与配置" tabindex="-1"><a class="header-anchor" href="#nginx的安装与配置" aria-hidden="true">#</a> nginx的安装与配置</h3><p>安装nginx</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ brew install nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改配置文件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo vim /usr/local/etc/nginx/nginx.conf #修改默认的8080端口为80\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>给予管理员权限</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ sudo chown root:wheel /usr/local/opt/nginx/bin/nginx\n$ sudo chmod u+s /usr/local/opt/nginx/bin/nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>这里无法启动一定要确认权限是否正确, 尤其是在升级之后</p></blockquote><p>这里使用 <code>brew services</code> 进行控制</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ brew services enable|start|restart|stop nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>运行nginx</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo nginx #打开 nginx\nnginx -s reload|reopen|stop|quit  #重新加载配置|重启|停止|退出 nginx\nnginx -t   #测试配置是否有语法错误\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>用法详解</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>选项列表</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-?,-h           : 打开帮助信息\n-v              : 显示版本信息并退出\n-V              : 显示版本和配置选项信息，然后退出\n-t              : 检测配置文件是否有语法错误，然后退出\n-q              : 在检测配置文件期间屏蔽非错误信息\n-s signal       : 给一个 nginx 主进程发送信号：stop（停止）, quit（退出）, reopen（重启）, reload（重新加载配置文件）\n-p prefix       : 设置前缀路径（默认是：/usr/local/Cellar/nginx/1.2.6/）\n-c filename     : 设置配置文件（默认是：/usr/local/etc/nginx/nginx.conf）\n-g directives   : 设置配置文件外的全局指令\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="mysql的安装与配置" tabindex="-1"><a class="header-anchor" href="#mysql的安装与配置" aria-hidden="true">#</a> mysql的安装与配置</h3><p>安装mysql</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ brew install mysql\n$ cd /usr/local/opt/mysql/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>修改配置文件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo vim my.cnf\n#如果出现无法启动mysql，rm my.cnf \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>加入launchctl启动控制</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cp /usr/local/opt/mysql/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/\nlaunchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n#取消启动\n#launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>初始化 mysql</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>./bin/mysql_install_db \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>执行安全设置脚本,设置root账号密码</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>./bin/mysql_secure_installation\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>命令行连接mysql</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql -uroot -p\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>mysql 可以对外服务</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>vim ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist\n# 将这一行\n&lt;string&gt;--bind-address=127.0.0.1&lt;/string&gt;\n# 替换为\n&lt;string&gt;--bind-address=0.0.0.0&lt;/string&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="php的安装与配置" tabindex="-1"><a class="header-anchor" href="#php的安装与配置" aria-hidden="true">#</a> php的安装与配置</h3><p><s>(10-13 10:23: 已经将 php 加入 核心包)brew 默认没有 php 安装包：</s></p><p>现在可以安装php了： 如果这里加上版本号, 则为指定版本,如果不加则是默认的版本, 非默认版本的属性是 <code>keg-only</code>, 意思就是可以支持多版本默认不会将命令行软链到 <code>/usr/local</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ brew install php@7.2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>安装之后有两段话需要注意</p><blockquote><p>php@7.2 is keg-only, which means it was not symlinked into /usr/local, because this is an alternate version of another formula. If you need to have php@7.2 first in your PATH run: echo &#39;export PATH=&quot;/usr/local/opt/php@7.2/bin:$PATH&quot;&#39; &gt;&gt; ~/.zshrc echo &#39;export PATH=&quot;/usr/local/opt/php@7.2/sbin:$PATH&quot;&#39; &gt;&gt; ~/.zshrc For compilers to find php@7.2 you may need to set: export LDFLAGS=&quot;-L/usr/local/opt/php@7.2/lib&quot; export CPPFLAGS=&quot;-I/usr/local/opt/php@7.2/include&quot;</p></blockquote><p>因为 mac 系统自带 php, 如果想使用我们安装的作为第一命令行, 则需要将路径寻找优先级高于系统 <code>$PATH</code> 位置</p><p>这里将php路径加入PATH有两种方式:</p><p>第一种, 修改 <code>rc</code> 文件, 可以根据自己的命令行工具来使用</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">vim</span> ~/.bash_profile\t\n<span class="token comment"># add to files</span>\n<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew --prefix php@7.2<span class="token variable">)</span></span>/bin:<span class="token environment constant">$PATH</span>&quot;</span>\n$ <span class="token builtin class-name">source</span> ~/.bash_profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>这种方式如果使用 <code>pecl</code> 来安装 php 扩展的时候则由于 <code>keg-only</code> 冲突无法安装, 提示无权创建</p><p>第二种方式是 这里强制 php7.2 作为可以执行的版本, 这种可以使用 <code>pecl</code> 进行安装 相关扩展, 比如 <code>redis</code>, <code>swoole</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ brew <span class="token function">link</span> --force php@7.2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这里也同样使用 <code>brew services</code> 来管理 php</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ [sudo] brew services start php@7.2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>是否使用 sudo 的区别</p><blockquote><p>If sudo is passed, operate on /Library/LaunchDaemons (started at boot). Otherwise, operate on ~/Library/LaunchAgents (started at login)</p></blockquote><p>配置路径</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/usr/local/etc/php/{version}/php.ini\n/usr/local/etc/php/{version}/php-fpm.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置 Nginx 支持 PHP-FPM</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo vim /usr/local/etc/nginx/nginx.conf\t\n# 添加默认首页 php\nindex  index.php index.html index.htm;\n\n# 取消以下内容的注释，并做修改\nlocation ~ \\.php$ {\n       fastcgi_intercept_errors on;\n       fastcgi_pass   127.0.0.1:9000;\n       fastcgi_index  index.php;\n       fastcgi_param  SCRIPT_FILENAME  /usr/local/Cellar/nginx/1.6.0_1/html$fastcgi_script_name;\n       include        /usr/local/etc/nginx/fastcgi_params;\n   }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="测试环境" tabindex="-1"><a class="header-anchor" href="#测试环境" aria-hidden="true">#</a> 测试环境</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sudo vim /usr/local/Cellar/nginx/1.6.0_1/html/index.php\n\n#添加测试代码\n&lt;?php \n\tphpinfo();\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h3><p>到目前为止，我们的Nginx、MySQL、PHP-FPM三大软件已经安装好了，针对不同的系统版本和软件版本，可能会遇到一些问题，欢迎留言探讨。</p>',69),c={render:function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,(0,a._)("p",null,[r,(0,a._)("a",p,[i,(0,a.Wm)(s)])]),t],64)}}}}]);