"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2198],{2806:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-79d21c58",path:"/nginx/guide/linux-install.html",title:"Linux 中编译安装和配置 Nginx",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"下载安装包并解压",slug:"下载安装包并解压",children:[]},{level:2,title:"nginx的配置文件",slug:"nginx的配置文件",children:[]},{level:2,title:"配置nginx安装参数",slug:"配置nginx安装参数",children:[{level:3,title:"编译nginx",slug:"编译nginx",children:[]}]},{level:2,title:"验证是否安装成功",slug:"验证是否安装成功",children:[]},{level:2,title:"重新编译安装",slug:"重新编译安装",children:[{level:3,title:"1. 下载对应版本 (如果不想更新版本可以忽略)",slug:"_1-下载对应版本-如果不想更新版本可以忽略",children:[]},{level:3,title:"2. 重新编译",slug:"_2-重新编译",children:[]},{level:3,title:"3. 复制程序",slug:"_3-复制程序",children:[]}]}],filePathRelative:"nginx/guide/linux-install.md",git:{updatedTime:1629648513e3,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},1164:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});var e=a(6252);const l=(0,e.uE)('<h1 id="linux-中编译安装和配置-nginx" tabindex="-1"><a class="header-anchor" href="#linux-中编译安装和配置-nginx" aria-hidden="true">#</a> Linux 中编译安装和配置 Nginx</h1><blockquote><p>注意：本示例在 Centos 6.5 、Centos 7.3 中运行。</p></blockquote><h2 id="下载安装包并解压" tabindex="-1"><a class="header-anchor" href="#下载安装包并解压" aria-hidden="true">#</a> 下载安装包并解压</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 进入约定的安装包目录</span>\n<span class="token builtin class-name">cd</span> /约定目录/src/\n\n<span class="token comment"># 下载nginx安装文件，这里以 nginx-1.11.1 为例，其他的nginx包可以去官网查找</span>\n<span class="token function">wget</span> http://nginx.org/download/nginx-1.11.1.tar.gz\n\n<span class="token comment"># 把安装包解压，会自动解压到 /约定目/src/nginx-1.11.1/ 文件夹里</span>\n<span class="token function">tar</span> xzf nginx-1.11.1.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="nginx的配置文件" tabindex="-1"><a class="header-anchor" href="#nginx的配置文件" aria-hidden="true">#</a> nginx的配置文件</h2><p>其实完全可以使用 Nginx 的默认配置文件，默认配置文件编译后的地址在 <code>程序目录/conf/nginx.conf</code> ，但如果你会频繁的更新 Nginx 版本的话配置文件最后&quot;分离&quot;，类似前后端分离一样，这样可以少&quot;吵架&quot;(解耦合)，我们单独的把 Nginx 的所有配置，包括所有站点的配置、SSL 证书都放在 <code>/约定目录/nginx-conf/</code> 目录里，如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/约定目录/nginx-conf/\n\n    # nginx配置文件\n    ./nginx.conf\n\n    # nginx的其他配置\n    ./mime.types\n\n    # 站点配置\n    ./conf/\n        # 各个子站点目录\n        ./www.xxoo.com.conf\n        ./www.a.com.conf\n        ...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>/约定目录/nginx-conf/conf/</code> 目录里存放以网站为单位的配置文件，文件名以网站域名命名，这样可以配置分离，互不影响，而且好定位问题。</p><h2 id="配置nginx安装参数" tabindex="-1"><a class="header-anchor" href="#配置nginx安装参数" aria-hidden="true">#</a> 配置nginx安装参数</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建对应版本的程序目录，这个目录用来存放编译后的文件</span>\n<span class="token function">mkdir</span> -p /约定目录/local/nginx-1.11.1/\n\n<span class="token comment"># 进入安装包解压后的目录</span>\n<span class="token builtin class-name">cd</span> /约定目录/src/nginx-1.11.1/\n\n<span class="token comment"># 开始配置</span>\n./configure --prefix<span class="token operator">=</span>/home/local/nginx-1.11.1 --conf-path<span class="token operator">=</span>/home/local/nginx-conf/vhost/nginx.conf --with-http_ssl_module --with-http_realip_module --with-http_dav_module --with-http_gzip_static_module --with-http_v2_module\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',10),i=(0,e.Uk)("其他的安装编译配置可点击："),r={href:"http://www.ttlsa.com/nginx/nginx-configure-descriptions/",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("Nginx 编译参数"),c=(0,e.uE)('<h3 id="编译nginx" tabindex="-1"><a class="header-anchor" href="#编译nginx" aria-hidden="true">#</a> 编译nginx</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 开始编译并安装，可能需要sudo权限\nmake\n[sudo] make install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="验证是否安装成功" tabindex="-1"><a class="header-anchor" href="#验证是否安装成功" aria-hidden="true">#</a> 验证是否安装成功</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 进入nginx执行目录\ncd /约定目录/local/nginx-1.11.1/sbin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>运行 <code>./nginx -v</code> 查看版本，结果如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nginx version: nginx/1.11.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果你有开启 <code>http_ssl_module</code> ，可运行：<code>./nginx -V</code> 查看是否支持，结果如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>nginx version: nginx/1.11.1\nbuilt by gcc 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC)\nbuilt with OpenSSL 1.0.1e-fips 11 Feb 2013\nTLS SNI support enabled\n...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="重新编译安装" tabindex="-1"><a class="header-anchor" href="#重新编译安装" aria-hidden="true">#</a> 重新编译安装</h2><p>是指已经安装成功, 但想对 Nginx 添加个模块或者修改配置时需要重新编译。</p><h3 id="_1-下载对应版本-如果不想更新版本可以忽略" tabindex="-1"><a class="header-anchor" href="#_1-下载对应版本-如果不想更新版本可以忽略" aria-hidden="true">#</a> 1. 下载对应版本 (如果不想更新版本可以忽略)</h3><p>可以使用 <code>nginx -V</code> 查看当前程序的编译参数</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 下载</span>\n\n<span class="token function">wget</span> http://nginx.org/download/nginx-1.11.13.tar.gz\n\n<span class="token comment"># 解压</span>\n<span class="token function">tar</span> xzf nginx-1.11.13.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-重新编译" tabindex="-1"><a class="header-anchor" href="#_2-重新编译" aria-hidden="true">#</a> 2. 重新编译</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 配置</span>\n./configure --prefix<span class="token operator">=</span>xxx 你的新参数\n\n<span class="token comment"># 编译</span>\n<span class="token punctuation">[</span>sudo<span class="token punctuation">]</span> <span class="token function">make</span>\n这时侯切记不要make install, 因为make install就会把文件复制到安装目录\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_3-复制程序" tabindex="-1"><a class="header-anchor" href="#_3-复制程序" aria-hidden="true">#</a> 3. 复制程序</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 新复制老版本, 以防出错</span>\n<span class="token function">cp</span> /path/nginx /path/nginx.back\n\n<span class="token comment"># 停止服务</span>\n/path/nginx -s stop\n\n<span class="token comment"># 复制新版本到安装目录</span>\n<span class="token function">cp</span> objs/nginx /path/nginx\n\n<span class="token comment"># 查看新版本</span>\n/path/nginx -t\n\n<span class="token comment"># 启动新版本</span>\n/path/nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>注意：如果在运行中直接覆盖 Nginx 会报： <code>cp: 无法创建普通文件&quot;nginx&quot;: 文本文件忙</code> 。</p>',18),t={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[l,(0,e._)("p",null,[i,(0,e._)("a",r,[p,(0,e.Wm)(a)])]),c],64)}}}}]);