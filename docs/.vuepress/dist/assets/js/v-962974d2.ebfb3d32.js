"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5659],{4816:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-962974d2",path:"/mysql/4_string.html",title:"4. 与字符串共舞",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"5.1 字符串属性",slug:"_5-1-字符串属性",children:[]},{level:3,title:"5.2 选择字符串数据类型",slug:"_5-2-选择字符串数据类型",children:[]},{level:3,title:"5.3 正确设置连接字符集",slug:"_5-3-正确设置连接字符集",children:[]},{level:3,title:"5.4 查询字符串",slug:"_5-4-查询字符串",children:[]},{level:3,title:"5.5 检查字符集和字符排序",slug:"_5-5-检查字符集和字符排序",children:[]},{level:3,title:"5.6 字串操作函数",slug:"_5-6-字串操作函数",children:[]},{level:3,title:"5.7 使用 SQL 模式进行匹配",slug:"_5-7-使用-sql-模式进行匹配",children:[]},{level:3,title:"5.8 使用正则表达式进行匹配",slug:"_5-8-使用正则表达式进行匹配",children:[]},{level:3,title:"5.9 使用 FullText 查询",slug:"_5-9-使用-fulltext-查询",children:[]}],filePathRelative:"mysql/4_string.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},6045:(n,s,e)=>{e.r(s),e.d(s,{default:()=>t});const a=(0,e(6252).uE)('<h1 id="_4-与字符串共舞" tabindex="-1"><a class="header-anchor" href="#_4-与字符串共舞" aria-hidden="true">#</a> 4. 与字符串共舞</h1><h3 id="_5-1-字符串属性" tabindex="-1"><a class="header-anchor" href="#_5-1-字符串属性" aria-hidden="true">#</a> 5.1 字符串属性</h3><p><strong>字符集</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 看看系统中有哪些字符集</span>\nmysql <span class="token operator">&gt;</span> Show Character Set<span class="token punctuation">;</span>\n+----------+---------------------------------+---------------------+--------+\n<span class="token operator">|</span> Charset  <span class="token operator">|</span> Description                     <span class="token operator">|</span> Default collation   <span class="token operator">|</span> Maxlen <span class="token operator">|</span>\n+----------+---------------------------------+---------------------+--------+\n<span class="token operator">|</span> big5     <span class="token operator">|</span> Big5 Traditional Chinese        <span class="token operator">|</span> big5_chinese_ci     <span class="token operator">|</span>      <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token operator">|</span> dec8     <span class="token operator">|</span> DEC West European               <span class="token operator">|</span> dec8_swedish_ci     <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token operator">|</span> cp850    <span class="token operator">|</span> DOS West European               <span class="token operator">|</span> cp850_general_ci    <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token operator">|</span> hp8      <span class="token operator">|</span> HP West European                <span class="token operator">|</span> hp8_english_ci      <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token operator">|</span> koi8r    <span class="token operator">|</span> KOI8-R Relcom Russian           <span class="token operator">|</span> koi8r_general_ci    <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token operator">|</span> latin1   <span class="token operator">|</span> cp1252 West European            <span class="token operator">|</span> latin1_swedish_ci   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token punctuation">..</span>.\n<span class="token operator">|</span> utf8     <span class="token operator">|</span> UTF-8 Unicode                   <span class="token operator">|</span> utf8_general_ci     <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>\n<span class="token operator">|</span> ucs2     <span class="token operator">|</span> UCS-2 Unicode                   <span class="token operator">|</span> ucs2_general_ci     <span class="token operator">|</span>      <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token punctuation">..</span>.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>Length 和 Char_Length 差别</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; Set @s = Convert(&#39;abc&#39; Using ucs2);\nmysql&gt; Select Length(@s), Char_Length(@s);\n+------------+-----------------+\n| Length(@s) | Char_Length(@s) |\n+------------+-----------------+\n|          6 |               3 |\n+------------+-----------------+\n\nmysql&gt; Set @s = Convert(&#39;abc&#39; Using utf8);\nmysql&gt; Select Length(@s), Char_Length(@s);\n+------------+-----------------+\n| Length(@s) | Char_Length(@s) |\n+------------+-----------------+\n|          3 |               3 |\n+------------+-----------------+\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>Collation</strong></p><p>如果没有指明哪种 Collation, 则 Default 为 Yes 的则为默认的字符集.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; Show Collation Like &#39;utf8\\_%&#39;;\n+--------------------------+---------+-----+---------+----------+---------+\n| Collation                | Charset | Id  | Default | Compiled | Sortlen |\n+--------------------------+---------+-----+---------+----------+---------+\n| utf8_general_ci          | utf8    |  33 | Yes     | Yes      |       1 |\n| utf8_bin                 | utf8    |  83 |         | Yes      |       1 |\n| utf8_unicode_ci          | utf8    | 192 |         | Yes      |       8 |\n| utf8_icelandic_ci        | utf8    | 193 |         | Yes      |       8 |\n| utf8_latvian_ci          | utf8    | 194 |         | Yes      |       8 |\n| utf8_romanian_ci         | utf8    | 195 |         | Yes      |       8 |\n| utf8_slovenian_ci        | utf8    | 196 |         | Yes      |       8 |\n| utf8_polish_ci           | utf8    | 197 |         | Yes      |       8 |\n| utf8_estonian_ci         | utf8    | 198 |         | Yes      |       8 |\n| utf8_spanish_ci          | utf8    | 199 |         | Yes      |       8 |\n| utf8_swedish_ci          | utf8    | 200 |         | Yes      |       8 |\n| utf8_turkish_ci          | utf8    | 201 |         | Yes      |       8 |\n| utf8_czech_ci            | utf8    | 202 |         | Yes      |       8 |\n| utf8_danish_ci           | utf8    | 203 |         | Yes      |       8 |\n| utf8_lithuanian_ci       | utf8    | 204 |         | Yes      |       8 |\n| utf8_slovak_ci           | utf8    | 205 |         | Yes      |       8 |\n| utf8_spanish2_ci         | utf8    | 206 |         | Yes      |       8 |\n| utf8_roman_ci            | utf8    | 207 |         | Yes      |       8 |\n| utf8_persian_ci          | utf8    | 208 |         | Yes      |       8 |\n| utf8_esperanto_ci        | utf8    | 209 |         | Yes      |       8 |\n| utf8_hungarian_ci        | utf8    | 210 |         | Yes      |       8 |\n| utf8_sinhala_ci          | utf8    | 211 |         | Yes      |       8 |\n| utf8_german2_ci          | utf8    | 212 |         | Yes      |       8 |\n| utf8_croatian_ci         | utf8    | 213 |         | Yes      |       8 |\n| utf8_unicode_520_ci      | utf8    | 214 |         | Yes      |       8 |\n| utf8_vietnamese_ci       | utf8    | 215 |         | Yes      |       8 |\n| utf8_general_mysql500_ci | utf8    | 223 |         | Yes      |       1 |\n+--------------------------+---------+-----+---------+----------+---------+\n27 rows in set (0.01 sec)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>名称后缀的说明</p><ul><li>ci : (case insensitive) 大小写不敏感</li><li>cs : (case sensitive) 大小写敏感</li><li>bin: (binary) 二进制</li></ul><p>对于不同的语种也有不同的排序方法.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 排序 A, a, b, B (大小写不敏感, a 在 b 前边即可)\nSelect c From tb_name Order By c Collate latin_swedish_ci;\n\n# A, a, B, b (大小写敏感, A 在 a 前, B 在 b 前)\n.... Collate latin_swedish_cs;\n\n# A, B, a, b\n.... Collate latin_swedish_bin;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-2-选择字符串数据类型" tabindex="-1"><a class="header-anchor" href="#_5-2-选择字符串数据类型" aria-hidden="true">#</a> 5.2 选择字符串数据类型</h3><p><strong>根据这几个来进行判定</strong></p><ul><li>是否二进制</li><li>是否大小写敏感</li><li>字串的最大长度是多少</li><li>定长值还是变长值</li><li>是否需要保留尾部空格</li><li>是否有固定的允许值集合</li></ul><p><strong>字串长度</strong></p><table><thead><tr><th>二进制数据类型</th><th>普通文本</th><th>最大长度</th><th>说明</th></tr></thead><tbody><tr><td>Binary</td><td>Char</td><td>255</td><td>2^8</td></tr><tr><td>VarBinary</td><td>VarChar</td><td>65535</td><td>2^16</td></tr><tr><td>TinyBlob</td><td>TinyText</td><td>255</td><td>2^8</td></tr><tr><td>Blob</td><td>Text</td><td>65535</td><td>2^16</td></tr><tr><td>MediumBlob</td><td>MediumText</td><td>16777215</td><td>2^24</td></tr><tr><td>LongBlob</td><td>LongText</td><td>4294967295</td><td>2^32</td></tr></tbody></table><p><strong>字串空格保留</strong> 如果你想保留出现在储存的原始字符串尾部的填充值, 那就应该使用一个没有截除动作发生的数据类型, 例如, 如果你正存储可能以空格结尾的字串(普通文本), 并且想保留这个空格, 就应该使用 <code>VarChar</code> 或者 <code>Text</code> 数据类型之一.</p><h3 id="_5-3-正确设置连接字符集" tabindex="-1"><a class="header-anchor" href="#_5-3-正确设置连接字符集" aria-hidden="true">#</a> 5.3 正确设置连接字符集</h3><p><strong>配置文件</strong></p><div class="language-ini ext-ini line-numbers-mode"><pre class="language-ini"><code><span class="token header"><span class="token punctuation">[</span><span class="token section-name selector">mysql</span><span class="token punctuation">]</span></span>\n<span class="token key attr-name">default-character-set</span><span class="token punctuation">=</span><span class="token value attr-value">utf8</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>应用程序中使用</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; Set Names &#39;utf8&#39;;\nmysql&gt; Set Names &#39;utf8&#39; Collate &#39;utf8-general_ci&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>连接时候指定</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>jdbc:mysql://{host}/{db}?characterEncoding=UTF-8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_5-4-查询字符串" tabindex="-1"><a class="header-anchor" href="#_5-4-查询字符串" aria-hidden="true">#</a> 5.4 查询字符串</h3><p><strong>字串放在单引号或者双引号内</strong></p><p>启用 <code>ANSI_QUOTES</code> SQL 模式时候不得使用双引号, 一般来讲使用单引号会比较保险</p><p><strong>16 进制字符的表示</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0x61625ad43\nx&#39;61625ad43&#39;\nX&#39;61625ad43&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; select 0x61;\n+------+\n| 0x61 |\n+------+\n| a    |\n+------+\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>使用由字符集加下划线(&#39;_&#39;) 前缀组成的引入器</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>_latin1 &#39;abcd&#39;\n_ucs2 &#39;abcd&#39; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>查询过程中使用转义</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Select &quot;He said, \\&quot;Boo!\\&quot;&quot;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_5-5-检查字符集和字符排序" tabindex="-1"><a class="header-anchor" href="#_5-5-检查字符集和字符排序" aria-hidden="true">#</a> 5.5 检查字符集和字符排序</h3><p>使用 <code>Charset()</code> 或 <code>Collation()</code> 函数来检查字符集和排序</p><p>使用 <code>Convert()</code> 转换字符串的字符集</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; Set @s1 = &#39;my&#39;;\nmysql&gt; Set @s2 = Convert(@s1 Using latin1);\nmysql&gt; Select Charset(@s1), Charset(@s2);\n+--------------+--------------+\n| Charset(@s1) | Charset(@s2) |\n+--------------+--------------+\n| utf8         | latin1       |\n+--------------+--------------+\n1 row in set (0.00 sec)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>使用 <code>Collate</code> 操作符改变字符串的 Collation</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>mysql&gt; Set @s2 = @s1 Collate latin1_spanish_ci;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用 <code>Binary</code> 操作符来进行二进制转换, 同 <code>Convert(@s1 Using binary)</code> 相同.</p><h3 id="_5-6-字串操作函数" tabindex="-1"><a class="header-anchor" href="#_5-6-字串操作函数" aria-hidden="true">#</a> 5.6 字串操作函数</h3><p><code>Upper()</code> : 更改为大写 <code>Lower()</code> : 更改为小写 <code>Left(str, 2)</code> : 左侧截取 <code>Right(str, 2)</code> : 右侧截取 <code>Mid(str, 3, 1)</code> : 中间截取 <code>SubString(str, 2, 3)</code> : 字符随意截取 <code>SubString_Index(str, c, n)</code> : 左侧查找 c 在第 n 次出现的位置 <code>Concat()</code> : 字符串拼接 <code>Locate(search, subject)</code> : 确定一个字串中是否含有另一个字串</p><h3 id="_5-7-使用-sql-模式进行匹配" tabindex="-1"><a class="header-anchor" href="#_5-7-使用-sql-模式进行匹配" aria-hidden="true">#</a> 5.7 使用 SQL 模式进行匹配</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Like\n... Like &#39;co%&#39;;     # 开头\n... Like &#39;%er&#39;;     # 结尾\n... Like &#39;%er%&#39;;    # 包含\n\n# _\n... Like &#39;___per&#39;;  # 完全匹配\n\n# 模式匹配和字串函数的使用比较\nYear(d) = 1976       d Like &#39;1976-%&#39;\nMonth(d) = 4         d Like &#39;%-04-%&#39;\nDayOfMonth(d) = 1    d Like &#39;%-01&#39;\n\nstr Like &#39;abc%&#39;      Left(str, 3) = &#39;abc&#39;\nstr Like &#39;%abc&#39;      Right(str, 3) = &#39;abc&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_5-8-使用正则表达式进行匹配" tabindex="-1"><a class="header-anchor" href="#_5-8-使用正则表达式进行匹配" aria-hidden="true">#</a> 5.8 使用正则表达式进行匹配</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>^         : 开始\n$         : 结束\n.         : 匹配任何字符\n[...]     : 匹配括号内任意字符\n[^...]    : 不匹配括号内任意字符\np1|p2|p3  : 多选1\n*         : 0+\n+         : 1+\n{n}       : 匹配 n 次\n{m, n}    : 最少 m, 最多 n 个\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>使用方法, 使用 <code>Regexp</code> 关键词进行匹配</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... Regexp &#39;^co&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>支持 Posix 类</p><table><thead><tr><th>类</th><th>对应说明</th></tr></thead><tbody><tr><td>[:alnum:]</td><td>Alphanumeric characters</td></tr><tr><td>[:alpha:]</td><td>Alphabetic characters</td></tr><tr><td>[:blank:]</td><td>Whitespace characters</td></tr><tr><td>[:cntrl:]</td><td>Control characters</td></tr><tr><td>[:digit:]</td><td>Digit characters</td></tr><tr><td>[:graph:]</td><td>Graphic characters</td></tr><tr><td>[:lower:]</td><td>Lowercase alphabetic characters</td></tr><tr><td>[:print:]</td><td>Graphic or space characters</td></tr><tr><td>[:punct:]</td><td>Punctuation characters</td></tr><tr><td>[:space:]</td><td>Space, tab, newline, and carriage return</td></tr><tr><td>[:upper:]</td><td>Uppercase alphabetic characters</td></tr><tr><td>[:xdigit:]</td><td>Hexadecimal digit characters</td></tr></tbody></table><p>正则表达式匹配不要求目标串与模式串完全匹配</p><h3 id="_5-9-使用-fulltext-查询" tabindex="-1"><a class="header-anchor" href="#_5-9-使用-fulltext-查询" aria-hidden="true">#</a> 5.9 使用 FullText 查询</h3><p><strong>标准语法</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 单列\n... Match (Column) Against (&#39;str&#39;);\n\n# 多单词查询, 并不是单词越多越精确\n... Match (Column) Against (&#39;str1 str2 str3&#39;)\n\n# 多列, 多词\n... Match (Column, Column2) Against (&#39;str1 str2 str3&#39;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>配置最小单词</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[mysqld]\nft_min_word_len=3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>禁止搜索的单词</strong></p><p>这种方法可以匹配多词, 单词, 移除部分单词</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... Match(Column) Against(&#39;+David -Mark&#39; In Boolean Mode)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>特殊字符匹配</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... Match(Column) Against(&#39;David*&#39; In Boolean Mode)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>词组查询</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>... Match(Column) Against(&#39;&quot;Disk Path&quot;&#39; In Boolean Mode)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',66),t={render:function(n,s){return a}}}}]);