"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[41],{2661:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1f1f105f",path:"/ops/sentry/install-at-centos.html",title:"CentOS 使用 docker 安装 sentry",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装环境",slug:"安装环境",children:[]},{level:2,title:"安装 senty 到 docker",slug:"安装-senty-到-docker",children:[]},{level:2,title:"配置 nginx 反向代理",slug:"配置-nginx-反向代理",children:[]},{level:2,title:"出现问题",slug:"出现问题",children:[{level:3,title:"1. Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock",slug:"_1-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-at-unix-var-run-docker-sock",children:[]},{level:3,title:"2. docker-compose 启动报错",slug:"_2-docker-compose-启动报错",children:[]},{level:3,title:"3. 配置 Sentry 可以发送邮件",slug:"_3-配置-sentry-可以发送邮件",children:[]},{level:3,title:"4. 这里配置 register mirror, 加速国内访问",slug:"_4-这里配置-register-mirror-加速国内访问",children:[]},{level:3,title:"5. Sentry 对接上之后无法收集日志",slug:"_5-sentry-对接上之后无法收集日志",children:[]}]}],filePathRelative:"ops/sentry/install-at-centos.md",git:{updatedTime:162981392e4,contributors:[{name:"duoli",email:"zhaody901@126.com",commits:1}]}}},4493:(n,s,a)=>{a.r(s),a.d(s,{default:()=>x});var e=a(6252);const p=(0,e._)("h1",{id:"centos-使用-docker-安装-sentry",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#centos-使用-docker-安装-sentry","aria-hidden":"true"},"#"),(0,e.Uk)(" CentOS 使用 docker 安装 sentry")],-1),r=(0,e._)("p",null,"Sentry 是一个开源的实时错误追踪系统，可以帮助开发者实时监控并修复异常问题。它主要专注于持续集成、提高效率并且提升用户体验。Sentry 分为服务端和客户端 SDK，前者可以直接使用提供的在线服务，也可以本地自行搭建；后者提供了对多种主流语言和框架的支持，包括 React、Angular、Node、Django、RoR、PHP、Laravel、Android、.NET、JAVA 等。同时它可提供了和其他流行服务集成的方案，例如 GitHub、GitLab、bitbuck、heroku、slack、Trello 等。",-1),l=(0,e._)("p",null,"Sentry 本身是基于 Django 开发的，而且也依赖到其他的如 Postgresql、 Redis 等组件，所以一般有两种途径进行安装：通过 Docker 或用 Python 搭建。官网下分别有以下的两个介绍：",-1),t=(0,e._)("p",null,"如果你选择了通过 Docker 进行安装，其实还有更加便捷的方式 —— docker-compose 。在 github 上有一个开源项目用于部署 Sentry ，我们可以直接使用该项目进行部署，首先是克隆该项目：",-1),o=(0,e.Uk)("地址 : "),c={href:"https://github.com/getsentry/onpremise/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("https://github.com/getsentry/onpremise/"),u=(0,e.uE)('<h2 id="安装环境" tabindex="-1"><a class="header-anchor" href="#安装环境" aria-hidden="true">#</a> 安装环境</h2><p><strong>安装 docker</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 安装/更新 Docker</span>\n$ yum remove docker docker-common docker-selinux docker-engine\n\n<span class="token comment"># 安装依赖</span>\n$ yum <span class="token function">install</span> -y yum-utils device-mapper-persistent-data lvm2\n\n<span class="token comment"># 添加 docker yum 源</span>\n$ yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n<span class="token comment"># 官方源比较慢的话可以更换为 Aliyun 的源</span>\n$ yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n<span class="token comment"># 允许拓展最新的不稳定的repository</span>\n$ yum-config-manager --enable docker-ce-edge\n\n<span class="token comment"># 安装docker</span>\n<span class="token comment"># yum -y install docker-ce</span>\n\n<span class="token comment"># 开机启动 &amp; 启动 Docker</span>\n$ systemctl <span class="token builtin class-name">enable</span> docker\n$ systemctl start docker\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><strong>安装 docker-composer</strong></p><p>这里推荐使用 Python 的 pip3 管理工具来安装 docker-compose, 这里不推荐使用 pip, 因为这是 2.0 的包管理</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 使用普通用户安装</span>\n$ pip3 <span class="token function">install</span> --user -U docker-compose\n\n<span class="token comment"># 查看docker compose版本</span>\n$ docker-compose version\ndocker-compose version <span class="token number">1.29</span>.2, build unknown\ndocker-py version: <span class="token number">5.0</span>.0\nCPython version: <span class="token number">3.6</span>.8\nOpenSSL version: OpenSSL <span class="token number">1.0</span>.2k-fips  <span class="token number">26</span> Jan <span class="token number">2017</span>\n\n<span class="token comment"># 查看 pip version</span>\n$ pip3 -V\npip <span class="token number">21.2</span>.4 from /usr/local/lib/python3.6/site-packages/pip <span class="token punctuation">(</span>python <span class="token number">3.6</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>如果没有 pip, 则按照以下步骤安装 pip</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#上一条语句没有显示版本信息则运行下面语句安装 python-pip3</span>\n$ yum -y <span class="token function">install</span> epel-release\n$ yum -y <span class="token function">install</span> python-pip\n<span class="token comment">#查看pip版本</span>\n$ pip -v\n<span class="token comment">#pip进行升级</span>\n$ pip <span class="token function">install</span> --upgrade pip\n<span class="token comment">#进行安装compose 第一条语句报错执行第二条，执行成功则跳过第二条</span>\n$ pip <span class="token function">install</span> docker-compose\n$ pip <span class="token function">install</span> docker-compose --ignore-installed requests\n$ docker-compose -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="安装-senty-到-docker" tabindex="-1"><a class="header-anchor" href="#安装-senty-到-docker" aria-hidden="true">#</a> 安装 senty 到 docker</h2><p><strong>克隆 sentry 并安装</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/getsentry/onpremise.git\n$ ./install.sh\nChecking minimum requirements<span class="token punctuation">..</span>.\nRemoving network onpremise_default\n<span class="token punctuation">..</span>.\nCreated internal Sentry project <span class="token punctuation">(</span>slug<span class="token operator">=</span>internal, <span class="token assign-left variable">id</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\n\nWould you like to create a user account now? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span>: y\nEmail: username@domain.com\nPassword:\nRepeat <span class="token keyword">for</span> confirmation:\nUser created: username@domain.com\nAdded to organization: sentry\nCleaning up<span class="token punctuation">..</span>.\n\n----------------\nYou&#39;re all done<span class="token operator">!</span> Run the following <span class="token builtin class-name">command</span> to get Sentry running:\n\n  docker-compose up -d\n\n<span class="token comment"># docker images 检查安装结果</span>\n$ docker images\nREPOSITORY                             TAG                 IMAGE ID            CREATED             SIZE\nsymbolicator-cleanup-onpremise-local   latest              aa9f529b9bba        <span class="token number">6</span> minutes ago       168MB\nsentry-cleanup-onpremise-local         latest              c8ce20926772        <span class="token number">15</span> minutes ago      832MB\nsnuba-cleanup-onpremise-local          latest              899555aa0198        <span class="token number">15</span> minutes ago      417MB\nsentry-onpremise-local                 latest              7b49912508f3        <span class="token number">15</span> minutes ago      830MB\ngetsentry/snuba                        latest              c278520d8aa3        <span class="token number">2</span> hours ago         415MB\ngetsentry/sentry                       latest              5351ca5b79c7        <span class="token number">3</span> hours ago         830MB\ngetsentry/symbolicator                 latest              857ed4c4c3bb        <span class="token number">15</span> hours ago        167MB\ngetsentry/relay                        latest              cf4553a1852c        <span class="token number">15</span> hours ago        186MB\nbusybox                                latest              c7c37e472d31        <span class="token number">3</span> days ago          <span class="token number">1</span>.22MB\npostgres                               <span class="token number">9.6</span>                 51e37c2850c7        <span class="token number">3</span> weeks ago         200MB\ntianon/exim4                           latest              f077f7830685        <span class="token number">3</span> weeks ago         176MB\nredis                                  <span class="token number">5.0</span>-alpine          58084f18c7ec        <span class="token number">4</span> weeks ago         <span class="token number">29</span>.7MB\nalpine                                 latest              a24bb4013296        <span class="token number">4</span> weeks ago         <span class="token number">5</span>.57MB\nnginx                                  <span class="token number">1.16</span>                dfcfd8e9a5d3        <span class="token number">2</span> months ago        127MB\nconfluentinc/cp-kafka                  <span class="token number">5.5</span>.0               89e8e98718a8        <span class="token number">2</span> months ago        598MB\nconfluentinc/cp-zookeeper              <span class="token number">5.5</span>.0               124ff6469e3d        <span class="token number">2</span> months ago        598MB\nyandex/clickhouse-server               <span class="token number">19.17</span>               f0fa9b979b63        <span class="token number">4</span> months ago        435MB\nmemcached                              <span class="token number">1.5</span>-alpine          0dbf6b4c454b        <span class="token number">4</span> months ago        <span class="token number">9</span>.19MB\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p><strong>创建项目的 superuser</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ docker-compose run --rm web upgrade\nStarting sentry_onpremise_redis_1        <span class="token punctuation">..</span>. <span class="token keyword">done</span>\nStarting sentry_onpremise_smtp_1         <span class="token punctuation">..</span>. <span class="token keyword">done</span>\n<span class="token punctuation">..</span>.\nCreating missing DSNs\nCorrecting Group.num_comments counter\n09:49:46 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> sentry.plugins.github: apps-not-configured\nEmail: <span class="token number">1222</span>@qq.com\nPassword:\nRepeat <span class="token keyword">for</span> confirmation:\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>创建账号和密码</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建自己的用户, 根据提示输入邮箱和密码</span>\n$ docker-compose run --rm web createuser\nStarting onpremise_smtp_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>\nStarting onpremise_postgres_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>\nStarting onpremise_redis_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>\nStarting onpremise_memcached_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>\n09:49:39 <span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> sentry.utils.geo: settings.GEOIP_PATH_MMDB not configured.\n09:49:46 <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> sentry.plugins.github: apps-not-configured\nEmail: <span class="token number">1222</span>@qq.com\nPassword:\nRepeat <span class="token keyword">for</span> confirmation:\nShould this user be a superuser? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span>: y\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>生成 key 并设置</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ docker-compose run --rm web config generate-secret-key\n\n<span class="token comment"># 编辑 .env 文件</span>\n<span class="token comment"># 添加到 .env 的 SENTRY_SECRET_KEY 里面</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>启动 Docker Compose</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ docker-compose up -d\nsentry_onpremise_smtp_1 is up-to-date\n<span class="token punctuation">..</span>.\nRecreating sentry_onpremise_nginx_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用 docker ps 检查</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ docker ps\nCONTAINER ID        IMAGE                                  COMMAND                  CREATED             STATUS              PORTS                          NAMES\n7c86739e1904        nginx:1.16                             &quot;nginx -g &#39;daemon of…&quot;   26 minutes ago      Up 26 minutes       0.0.0.0:9080-&gt;80/tcp           sentry_onpremise_nginx_1\n...\na85aff3465f8        redis:5.0-alpine                       &quot;docker-entrypoint.s…&quot;   47 minutes ago      Up 39 minutes       6379/tcp                       sentry_onpremise_redis_1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>这样在内网便可以访问</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 由于没有开放 9080 端口到外网, 所以使用 wget 方式访问, 如果已经开放, 则直接访问 ip:9080 即可访问\n$ wget 127.0.0.1:9080\n--2020-07-03 10:30:24--  http://127.0.0.1:9080/\n正在连接 127.0.0.1:9080... 已连接。\n已发出 HTTP 请求，正在等待回应... 302 Found\n位置：/auth/login/ [跟随至新的 URL]\n--2020-07-03 10:30:25--  http://127.0.0.1:9080/auth/login/\n再次使用存在的到 127.0.0.1:9080 的连接。\n已发出 HTTP 请求，正在等待回应... 302 Found\n位置：/auth/login/sentry/ [跟随至新的 URL]\n--2020-07-03 10:30:26--  http://127.0.0.1:9080/auth/login/sentry/\n再次使用存在的到 127.0.0.1:9080 的连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：9690 (9.5K) [text/html]\n正在保存至: “index.html”\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="配置-nginx-反向代理" tabindex="-1"><a class="header-anchor" href="#配置-nginx-反向代理" aria-hidden="true">#</a> 配置 nginx 反向代理</h2><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> sentry.demo.domain.com</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:9080</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> sentry.domain.com</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://sentry.domain.com<span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span> sentry.domain.com</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>\n        <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:9080</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">## ssl</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate</span> https/sentry.domain.com.pem</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> https/sentry.domain.com.key</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_session_timeout</span> <span class="token number">5m</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_protocols</span> TLSv1 TLSv1.1 TLSv1.2</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_prefer_server_ciphers</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">error_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>这里即可通过域名来进行访问</p><p><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/87644/1623658065596-a5bf29a3-db1c-4a9b-8e3b-34a3c704b2ab.jpeg#height=1632&amp;id=ZqxFO&amp;originHeight=1632&amp;originWidth=2648&amp;originalType=binary&amp;ratio=1&amp;size=0&amp;status=done&amp;style=none&amp;width=2648" alt=""></p><h2 id="出现问题" tabindex="-1"><a class="header-anchor" href="#出现问题" aria-hidden="true">#</a> 出现问题</h2><h3 id="_1-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-at-unix-var-run-docker-sock" tabindex="-1"><a class="header-anchor" href="#_1-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket-at-unix-var-run-docker-sock" aria-hidden="true">#</a> 1. Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock</h3><p>解决方法 : 将用户加入 docker 组, 可以让其进行访问</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 把用户加入 docker 组</span>\n$ <span class="token function">usermod</span> -aG docker <span class="token environment constant">$USER</span>\n<span class="token comment"># logout : 注销</span>\n$ systemctl restart docker\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-docker-compose-启动报错" tabindex="-1"><a class="header-anchor" href="#_2-docker-compose-启动报错" aria-hidden="true">#</a> 2. docker-compose 启动报错</h3><blockquote><p>ERROR: for sentry_onpremise_nginx_1  Cannot start service nginx: driver failed programming external connectivity on endpoint sentry_onpremise_nginx_1 (9ee80c3b3949749bdb529f949574f6169a4f993c9a0d50aa621228bd57d579fb): Error starting userland proxy: listen tcp 0.0.0.0:9000: bind: address already in use</p></blockquote><blockquote><p>ERROR: Encountered errors while bringing up the project.</p></blockquote>',34),m=(0,e.Uk)("解决方法: 这里一般是端口冲突 参考 "),b={href:"https://github.com/getsentry/onpremise/blob/master/.env",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)(".env"),k=(0,e.Uk)(" 文件配置端口映射"),g=(0,e.uE)('<div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code>...\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> SENTRY_BIND=9000\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> SENTRY_BIND=9080\n</span></span>...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-配置-sentry-可以发送邮件" tabindex="-1"><a class="header-anchor" href="#_3-配置-sentry-可以发送邮件" aria-hidden="true">#</a> 3. 配置 Sentry 可以发送邮件</h3><p>编辑 <code>./sentry/config.yml</code> 文件</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">mail.backend</span><span class="token punctuation">:</span> <span class="token string">&quot;smtp&quot;</span> <span class="token comment"># Use dummy if you want to disable email entirely</span>\n<span class="token key atrule">mail.host</span><span class="token punctuation">:</span> <span class="token string">&quot;smtpdm.aliyun.com&quot;</span>\n<span class="token key atrule">mail.port</span><span class="token punctuation">:</span> <span class="token number">25</span>\n<span class="token key atrule">mail.username</span><span class="token punctuation">:</span> <span class="token string">&quot;automail@demo.domain.com&quot;</span>\n<span class="token key atrule">mail.password</span><span class="token punctuation">:</span> <span class="token string">&quot;********&quot;</span>\n<span class="token key atrule">mail.use-tls</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n<span class="token comment"># The email address to send on behalf of</span>\n<span class="token key atrule">mail.from</span><span class="token punctuation">:</span> <span class="token string">&quot;automail@demo.domain.com&quot;</span>\n<span class="token comment"># 备注: host 就是stmp服务地址</span>\n<span class="token comment"># port 端口和 tls对应 port  25 对应 tls false  port 587 对应 tls true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>然后运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ docker-compose build\n$ docker-compose stop\n$ docker-compose start -d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样看下 管理员中的 邮箱配置</p><p><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/87644/1623658065601-4a582e4d-1100-4cce-975d-e1f166e28d75.jpeg#height=633&amp;id=LbULY&amp;originHeight=1266&amp;originWidth=1942&amp;originalType=binary&amp;ratio=1&amp;size=0&amp;status=done&amp;style=none&amp;width=971" alt=""></p><p>测试下收到邮件就配置成功了</p><p><img src="https://cdn.nlark.com/yuque/0/2021/jpeg/87644/1623658065583-573bf648-6744-4813-b901-9b9e2e769268.jpeg#height=221&amp;id=RLj9R&amp;originHeight=442&amp;originWidth=1598&amp;originalType=binary&amp;ratio=1&amp;size=0&amp;status=done&amp;style=none&amp;width=799" alt=""></p><blockquote><p>ps : 这里用的是网易的客户端</p></blockquote><h3 id="_4-这里配置-register-mirror-加速国内访问" tabindex="-1"><a class="header-anchor" href="#_4-这里配置-register-mirror-加速国内访问" aria-hidden="true">#</a> 4. 这里配置 register mirror, 加速国内访问</h3>',12),h=(0,e.Uk)("打开 "),y={href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors"),f=(0,e.Uk)(" , 这里将镜像设置为使用 aliyun 的加速镜像 针对 Docker 客户端版本大于 1.10.0 的用户 ​ 您可以通过修改 daemon 配置文件/etc/docker/daemon.json 来使用加速器"),_=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/docker\n<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;\n{\n  &quot;registry-mirrors&quot;: [&quot;https://******.mirror.aliyuncs.com&quot;]\n}\nEOF</span>\n<span class="token function">sudo</span> systemctl daemon-reload\n<span class="token function">sudo</span> systemctl restart docker\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-sentry-对接上之后无法收集日志" tabindex="-1"><a class="header-anchor" href="#_5-sentry-对接上之后无法收集日志" aria-hidden="true">#</a> 5. Sentry 对接上之后无法收集日志</h3><p>需要验证</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 验证服务器是否接收到请求</span>\n$ <span class="token function">tail</span> -20f /var/logs/nginx/access.log\n\n<span class="token comment"># 验证 docker 镜像是否收到日志</span>\n$ docker-compose logs -f -t --tail<span class="token operator">=</span><span class="token number">100</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>下面是一次执行服务的日志</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># 接收\nnginx_1                    | 172.18.0.1 - - [18/Jul/2020:03:10:02 +0000] &quot;POST /api/4/store/ HTTP/1.0&quot; 200 41 &quot;-&quot; &quot;sentry.php.laravel/1.8.0&quot;\n# kafka 进行消费\ningest-consumer_1          | 03:10:03 [INFO] batching-kafka-consumer: Flushing 2 items (from {(u&#39;ingest-events&#39;, 0): [138L, 139L]}): forced:False size:False time:True\n# snuba 进行处理\nsnuba-cleanup_1            | 2020-07-18 03:10:03,574 Dropped 0 partitions on None\nsnuba-consumer_1           | 2020-07-18 03:10:04,600 Flushing 2 items (from {Partition(topic=Topic(name=&#39;events&#39;), index=0): Offsets(lo=154, hi=156)}): forced:False size:False time:True\nsnuba-outcomes-consumer_1  | 2020-07-18 03:10:04,603 Flushing 2 items (from {Partition(topic=Topic(name=&#39;outcomes&#39;), index=0): Offsets(lo=140, hi=142)}): forced:False size:False time:True\nsnuba-outcomes-consumer_1  | 2020-07-18 03:10:04,623 Worker flush took 18ms\nsnuba-consumer_1           | 2020-07-18 03:10:04,730 Worker flush took 129ms\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>如果出现异常则可以进行重启</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ docker-compose restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',8),x={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,r,l,t,(0,e._)("p",null,[o,(0,e._)("a",c,[i,(0,e.Wm)(a)])]),u,(0,e._)("p",null,[m,(0,e._)("a",b,[d,(0,e.Wm)(a)]),k]),g,(0,e._)("p",null,[h,(0,e._)("a",y,[v,(0,e.Wm)(a)]),f]),_],64)}}}}]);